name: Build, Test and Release
# Limit main to one build at a time to prevent any race conditions
concurrency: main

on:
  push:
    branches:
      - main

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.version.outputs.changes }} # map step output to job output
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          token: ${{ secrets.SERVICE_ACCOUNT_PAT }}

      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # This step will run changeset version, setting the step output to if there were changesets found
      - name: Install dependencies
        id: version
        run: |
          npm install
          echo "{changes}={$(npx changeset version | grep -w 'No unreleased changesets found' && echo 'false' || echo 'true')}" >> $GITHUB_OUTPUT
      
      - name: Check changes output
        run: echo "${{steps.version.outputs.changes}}"

      # Push the updated package.json, and CHANGESET.md files to github, this will trigger a new build
      # the || echo 'No changes' is to ignore errors from git when trying to commit and there are no changes
      # - name: Push changes
      #   if: steps.version.outputs.changes == 'true'
      #   run: echo "${{steps.version.outputs.changes}}"
        # run: |
        #   git config user.email "<email>"
        #   git config user.name "<name>"
        #   git add -A
        #   git commit -m "Version packages" || echo "No changes to commit"
        #   git push

  build:
    runs-on: ubuntu-latest
    needs: version
    # This will only run if there were no changesets.
    ## the next triggered build from the push will then pass this step and continue with the release
    if: always() && needs.version.outputs.changes == 'false'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: "https://registry.npmjs.org"
          scope: "@<scope>"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

        #### Your install/Build/Test/Package steps here
      - name: Install Dependencies
        run: npm install

      - name: Release packages
        uses: changesets/action@v1
        with:
          publish: pnpx changeset publish
        env:
          GITHUB_TOKEN: ${{ secrets.SERVICE_ACCOUNT_PAT }}
